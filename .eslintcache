[{"E:\\Development\\React Firestore Curd Operations\\firestore-curd\\src\\index.js":"1","E:\\Development\\React Firestore Curd Operations\\firestore-curd\\src\\reportWebVitals.js":"2","E:\\Development\\React Firestore Curd Operations\\firestore-curd\\src\\App.js":"3","E:\\Development\\React Firestore Curd Operations\\firestore-curd\\src\\firebase.js":"4","E:\\Development\\React Firestore Curd Operations\\firestore-curd\\src\\render-items.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":4796,"mtime":1607596563130,"results":"9","hashOfConfig":"7"},{"size":676,"mtime":1607522064949,"results":"10","hashOfConfig":"7"},{"size":997,"mtime":1607540309568,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1lrlqj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"E:\\Development\\React Firestore Curd Operations\\firestore-curd\\src\\index.js",[],["26","27"],"E:\\Development\\React Firestore Curd Operations\\firestore-curd\\src\\reportWebVitals.js",[],"E:\\Development\\React Firestore Curd Operations\\firestore-curd\\src\\App.js",["28"],"import { useState, useEffect } from 'react'\nimport './App.css';\nimport RenderItems from './render-items';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport db from './firebase';\nimport firebase from 'firebase/app';\n\nfunction App() {\n\n  const [FirestoreData, setFirestoreData] = useState([])\n  const [id, setId] = useState('')\n  const [name, setName] = useState('')\n  const [details, setDetails] = useState('')\n  const [time, setTime] = useState('')\n\n  // Date Time\n  var today = new Date();\n  var dateTime = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear() + \"    \" +\n    today.getHours() + \":\" + today.getMinutes();\n\n  //  \n  useEffect(() => {\n    db.collection(\"STUDENTS\").onSnapshot(function (querySnapshot) {\n      setFirestoreData(\n        querySnapshot.docs.map((doc) => ({\n          keyId: doc.id,\n          i: doc.data().ID,\n          n: doc.data().NAME,\n          d: doc.data().DETAILS,\n          t: doc.data().TIME,\n        }))\n\n      )\n    })\n\n  }, [])\n\n\n  // \n  const Add = (e) => {\n    db.collection(\"STUDENTS\").add({\n      ID: id,\n      NAME: name,\n      DETAILS: details,\n      TIME: dateTime,\n      SERVERTIMESTAMP: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n      .then(() => {\n        setId(\"\")\n        setName(\"\")\n        setDetails(\"\")\n        setTime(\"\")\n        alert('✅ Successfully Added')\n      })\n      .catch((error) => {\n        console.log(error.message);\n        alert('⚠️', error.message)\n      });\n\n  }\n\n\n  //  \n  const [searchFirebaseKey, setSearchFirebaseKey] = useState('')\n  const Search = () => {\n    // console.log(searchFirebaseKey)\n    db.collection(\"STUDENTS\").doc(searchFirebaseKey).get()\n      .then(function (doc) {\n        setId(doc.data().ID)\n        setName(doc.data().NAME)\n        setDetails(doc.data().DETAILS)\n        setTime(doc.data().TIME)\n      })\n      .then(() => {\n        alert('✅ Search Successfull')\n      })\n      .catch((error) => {\n        console.log(error.message);\n        alert('⚠️ This Key Is Not Present In Database', error.message)\n      });\n  }\n\n\n  // \n  const Update = () => {\n    db.collection(\"STUDENTS\").doc(searchFirebaseKey).update({\n      ID: id,\n      NAME: name,\n      DETAILS: details,\n      TIME: dateTime,\n      SERVERTIMESTAMP: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n      .then(() => {\n        setId(\"\")\n        setName(\"\")\n        setDetails(\"\")\n        setTime(\"\")\n        alert('✅ Updated Successfully')\n      })\n      .catch((error) => {\n        console.log(error.message);\n        alert('⚠️ This Key Is Not Present In Database', error.message)\n      });\n  }\n\n\n  // \n  const Delete = () => {\n    db.collection(\"STUDENTS\").doc(searchFirebaseKey).delete()\n      .then(() => {\n        setId(\"\")\n        setName(\"\")\n        setDetails(\"\")\n        setTime(\"\")\n        alert('✅ Deleted')\n      })\n      .catch((error) => {\n        console.log(error.message);\n        alert('⚠️ This Key Is Not Present In Database', error.message)\n      });\n  }\n\n\n  return (\n    <div className=\"center\">\n      <h1>FIREBASE FIRESTORE CURD OPERATIONS</h1>\n      <TextField id=\"tf\" label=\"Key\" value={searchFirebaseKey} onChange={(s) => setSearchFirebaseKey(s.target.value)} /> <br /><br />\n\n      <TextField id=\"tf\" label=\"ID\" value={id} onChange={(e) => setId(e.target.value)} /><br /><br />\n      <TextField id=\"tf\" label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} /><br /><br />\n      <TextField id=\"tf\" label=\"Deatils\" value={details} onChange={(e) => setDetails(e.target.value)} /><br /><br />\n      <TextField id=\"tf\" label=\"Date   Time\" disabled={true} value={dateTime} onChange={(e) => setTime(e.target.value)} /> <br /><br /><br />\n\n      <Button variant=\"contained\" color=\"primary\" onClick={Add}  ><AddBoxOutlinedIcon />&nbsp;INSERT</Button>&nbsp;&nbsp;\n      <Button variant=\"contained\" color=\"primary\" disabled={!searchFirebaseKey} onClick={Search}  ><SearchIcon />&nbsp;SEARCH </Button>&nbsp;&nbsp;\n      <Button variant=\"contained\" color=\"primary\" onClick={Update}  ><UpdateIcon />&nbsp;UPDATE</Button>&nbsp;&nbsp;\n      <Button variant=\"contained\" color=\"primary\" onClick={Delete}  ><DeleteOutlineIcon />&nbsp;DELETE</Button>\n\n      <br />\n      <br />\n\n      {/* TODO */}\n      <div className=\"width\" >\n        {FirestoreData.map((demo, index) => {\n          return <RenderItems keyId={demo.keyId} i={demo.i} n={demo.n} d={demo.d} t={demo.t} key={index} />\n        })}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","E:\\Development\\React Firestore Curd Operations\\firestore-curd\\src\\firebase.js",[],["29","30"],"E:\\Development\\React Firestore Curd Operations\\firestore-curd\\src\\render-items.js",["31"],"import React from 'react'\r\nimport db from './firebase';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\n\r\nexport default function RenderItems({keyId,i,n,d,t}) {\r\n    \r\n  const deleteSingleTodo =()=>{\r\n    // console.log(keyId)\r\ndb.collection('STUDENTS').doc(keyId).delete();\r\n  }\r\n\r\n\r\nconst updateSingleTodo =()=>{\r\ndb.collection('STUDENTS').doc(keyId).update({\r\n\r\n})\r\n}\r\n    return (\r\n            <Paper elevation={3} style={{ textAlign: 'left', paddingLeft: 10 }}>\r\n                <p>Key:  &nbsp; &nbsp; &nbsp; {keyId}</p>\r\n                <p>ID:  &nbsp; &nbsp; &nbsp; &nbsp; {i}</p>\r\n                <p>Name: &nbsp;&nbsp;{n}</p>\r\n                <p>Details: &nbsp;{d}</p>\r\n                <p>Time:  &nbsp; &nbsp; {t}</p>\r\n            <DeleteOutlineIcon onClick={deleteSingleTodo} />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<UpdateIcon /><br />\r\n            </Paper>\r\n    )\r\n}\r\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":19,"column":10,"nodeType":"38","messageId":"39","endLine":19,"endColumn":14},{"ruleId":"32","replacedBy":"40"},{"ruleId":"34","replacedBy":"41"},{"ruleId":"36","severity":1,"message":"42","line":16,"column":7,"nodeType":"38","messageId":"39","endLine":16,"endColumn":23},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'time' is assigned a value but never used.","Identifier","unusedVar",["43"],["44"],"'updateSingleTodo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]